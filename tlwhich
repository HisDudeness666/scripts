#!/bin/bash

# Copyright 2014, Raphael Reitzig
# <code@verrech.net>
#
# tlwhich is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# tlwhich is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tlwhich. If not, see <http://www.gnu.org/licenses/>.

# TeX Live Which looks for package, class, command and environment definitions 
# in the *.sty and *.cls files installed in the local TeX Live installation.
# Pass a name (without leading slash); even grep-compatibel regular expressions 
# are possible.

# TODO: sort result; switch to hide redefinitions; switch(es) to hide sty/cls; output matched command name?

# Where to search?
texhome="/usr/local/texlive/2014";

# Set up the list of things to look for
declare -A types;
types["pkg"]="package";
types["cls"]="class";
types["env"]="environment";
types["cmd"]="command";

declare -A patterns;
# Look for package definitions
patterns["pkg"]="\\\\ProvidesPackage{${1}}";

# Look for class definitions
patterns["cls"]="\\\\ProvidesClass{${1}}";

# What environment definitions to look for?
# - newenvironment
# - renewenvironment
# - Those from xparse
# - Those from xargs
# - NewEnviron (from environ)
#
# We *don't* look for pairs \def\env{...} ... \def\endenv{...} -- that's 
# not really feasible without context-free (or TeX) parsing.
patterns["env"]="\\\\((re)?newenvironment|NewEnviron|(Declare|New|Renew|Provide)DocumentEnvironment)x?\*?{${1}}";

# What command definitions to look for?
# - def (and variants)
# - newcommand
# - newcommand*
# - renewcommand
# - renewcommand*
# - providecommand
# - providecommand*
# - DeclareRobustCommand
# - CheckCommand
# - Those from xparse
# - Those from xargs
patterns["cmd"]="\\\\((e|x|g)?def|(Declare|New|Renew|Provide|DeclareExpandable|Check)DocumentCommand|(DeclareRobust|Check)Command|((re)?new|provide)command)x?\*?({\\\\${1}}|\\\\${1}(\[|\{))";

foundsth=0;
for type in ${!types[@]}; do
  res=`grep --include=*.{sty,cls} -l -r -E "${patterns[$type]}" "${texhome}"`;
  if [[ "${res}" != "" ]];
  then
    if [[ ${foundsth} -gt 0 ]]; then echo ""; fi
    echo "Files that define ${types[$type]} ${1}:";
    for f in ${res};
    do
      echo -e '\t'`basename "${f}"`;
    done;
    foundsth=1;
  fi
done;
